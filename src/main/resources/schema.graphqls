type Query {
    hello(who: String): String!
    bookById(id: ID): Book

    search(context: String, fields: [NField!]!, filter: NFilter, limit: Int, offset: Int, sort: [NSort]): NSearchResult

}

input NField {
    name: String
    source: String!
}

input NFilter {
    condition: NFilterCondition
    and: [NFilter]
    or: [NFilter]
    not: [NFilter]
}

input NFilterCondition {
    contains: NFilterValue
    eq: NFilterValue
    in: NFilterValue
    isblank: NFilterValue
    isnull: NFilterValue
    range: NFilterValue
    regexp: NFilterValue
}

input NFilterValue {
    value: String!
}

input NSort {
    attribute: String!
}

type NSearchResult {
    took: Int
    data: [String!]!
}

type Book {
    id: ID!
    name: String
    pageCount: Int
    author: Author
}

type Author {
    id: ID
    firstName: String
    lastName: String
}

